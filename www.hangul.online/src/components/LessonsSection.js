import React, { useState, useEffect } from 'react';
import LessonCard from './LessonCard';
import '../styles/LessonsSection.css';

const LessonsSection = ({ activeCategory = 'ƒê·ªÅ xu·∫•t' }) => {
  const [lessons, setLessons] = useState([]);
  const [loading, setLoading] = useState(true);

  // Categories for filtering lessons
  const categories = [
    'ƒê·ªÅ xu·∫•t',
    'Hangul c∆° b·∫£n',
    'Ph√°t √¢m',
    'T·ª´ v·ª±ng',
    'Ng·ªØ ph√°p',
    'Luy·ªán thi TOPIK'
  ];

  useEffect(() => {
    // Simulate API call
    setTimeout(() => {
      setLessons([
        {
          id: 1,
          title: "H·ªçc b·∫£ng ch·ªØ c√°i Hangul c∆° b·∫£n",
          description: "Kh√≥a h·ªçc gi·ªõi thi·ªáu v·ªÅ b·∫£ng ch·ªØ c√°i Hangul, gi√∫p b·∫°n n·∫Øm v·ªØng n·ªÅn t·∫£ng c∆° b·∫£n nh·∫•t c·ªßa ti·∫øng H√†n. H·ªçc c√°ch ƒë·ªçc, vi·∫øt v√† ph√°t √¢m ch√≠nh x√°c c√°c k√Ω t·ª± H√†n Qu·ªëc.",
          koreanText: "ÌïúÍ∏Ä",
          difficulty: "introductory",
          duration: "3 gi·ªù",
          type: "course",
          credentialType: "skill_badge"
        },
        {
          id: 2,
          title: "Giao ti·∫øp ti·∫øng H√†n c∆° b·∫£n",
          description: "Ph√°t tri·ªÉn k·ªπ nƒÉng giao ti·∫øp ti·∫øng H√†n h√†ng ng√†y v·ªõi c√°c t√¨nh hu·ªëng th·ª±c t·∫ø. H·ªçc c√°ch ch√†o h·ªèi, gi·ªõi thi·ªáu b·∫£n th√¢n v√† tr√≤ chuy·ªán c∆° b·∫£n.",
          koreanText: "ÏïàÎÖïÌïòÏÑ∏Ïöî",
          difficulty: "introductory",
          duration: "5 gi·ªù",
          type: "course",
          credentialType: "skill_badge"
        },
        {
          id: 3,
          title: "T·ª´ v·ª±ng ti·∫øng H√†n th√¥ng d·ª•ng",
          description: "X√¢y d·ª±ng v·ªën t·ª´ v·ª±ng ti·∫øng H√†n thi·∫øt y·∫øu cho cu·ªôc s·ªëng h√†ng ng√†y. H·ªçc t·ª´ v·ª±ng theo ch·ªß ƒë·ªÅ v√† c√°ch s·ª≠ d·ª•ng trong ng·ªØ c·∫£nh th·ª±c t·∫ø.",
          koreanText: "Îã®Ïñ¥",
          difficulty: "introductory",
          duration: "4 gi·ªù",
          type: "course",
          credentialType: "skill_badge"
        },
        {
          id: 4,
          title: "Ph√°t √¢m ti·∫øng H√†n chu·∫©n",
          description: "Luy·ªán t·∫≠p ph√°t √¢m ti·∫øng H√†n ch√≠nh x√°c v·ªõi h∆∞·ªõng d·∫´n chi ti·∫øt v√† audio chu·∫©n t·ª´ gi√°o vi√™n b·∫£n ng·ªØ.",
          koreanText: "Î∞úÏùå",
          difficulty: "introductory",
          duration: "6 gi·ªù",
          type: "course",
          credentialType: "skill_badge"
        },
        {
          id: 5,
          title: "Ng·ªØ ph√°p ti·∫øng H√†n c∆° b·∫£n",
          description: "N·∫Øm v·ªØng c√°c c·∫•u tr√∫c ng·ªØ ph√°p c∆° b·∫£n c·ªßa ti·∫øng H√†n ƒë·ªÉ giao ti·∫øp hi·ªáu qu·∫£ trong cu·ªôc s·ªëng h√†ng ng√†y.",
          koreanText: "Î¨∏Î≤ï",
          difficulty: "intermediate",
          duration: "8 gi·ªù",
          type: "course",
          credentialType: "skill_badge"
        },
        {
          id: 6,
          title: "Luy·ªán thi TOPIK I & II",
          description: "Kh√≥a h·ªçc chuy√™n s√¢u chu·∫©n b·ªã cho k·ª≥ thi TOPIK v·ªõi ƒë·ªÅ thi m·∫´u, chi·∫øn l∆∞·ª£c l√†m b√†i v√† tips t·ª´ chuy√™n gia.",
          koreanText: "ÌÜ†ÌîΩ",
          difficulty: "advanced",
          duration: "12 gi·ªù",
          type: "course",
          credentialType: "certification"
        }
      ]);
      setLoading(false);
    }, 1000);
  }, []);

  if (loading) {
    return (
      <div className="loading">
        <div className="ql-spinner"></div>
      </div>
    );
  }

  // Filter lessons based on active category
  const filteredLessons = lessons.filter(lesson => {
    if (activeCategory === 'ƒê·ªÅ xu·∫•t') return true;
    if (activeCategory === 'Hangul c∆° b·∫£n') return lesson.title.includes('Hangul');
    if (activeCategory === 'Ph√°t √¢m') return lesson.title.includes('ph√°t √¢m');
    if (activeCategory === 'T·ª´ v·ª±ng') return lesson.title.includes('t·ª´ v·ª±ng');
    if (activeCategory === 'Ng·ªØ ph√°p') return lesson.title.includes('ng·ªØ ph√°p');
    if (activeCategory === 'Luy·ªán thi TOPIK') return lesson.title.includes('TOPIK');
    return true;
  });

  return (
    <section className='guest-front-door-block trending-body' id='learn-korean' label='H·ªçc ti·∫øng H√†n' tabIndex='0'>
      <div className='section-header'>
        <h2 className='ql-display-medium'>
          Kh√≥a h·ªçc <strong>{activeCategory}</strong>
        </h2>
        <p className='ql-body-large section-description'>
          {activeCategory === 'ƒê·ªÅ xu·∫•t' && 'C√°c kh√≥a h·ªçc ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t d√†nh cho b·∫°n'}
          {activeCategory === 'Hangul c∆° b·∫£n' && 'H·ªçc b·∫£ng ch·ªØ c√°i Hangul t·ª´ c∆° b·∫£n'}
          {activeCategory === 'Ph√°t √¢m' && 'Luy·ªán ph√°t √¢m ti·∫øng H√†n chu·∫©n'}
          {activeCategory === 'T·ª´ v·ª±ng' && 'X√¢y d·ª±ng v·ªën t·ª´ v·ª±ng phong ph√∫'}
          {activeCategory === 'Ng·ªØ ph√°p' && 'N·∫Øm v·ªØng ng·ªØ ph√°p ti·∫øng H√†n'}
          {activeCategory === 'Luy·ªán thi TOPIK' && 'Chu·∫©n b·ªã thi TOPIK hi·ªáu qu·∫£'}
        </p>
      </div>
      
      <div className='featured'>
        <div className='cards'>
          {filteredLessons.length > 0 ? (
            filteredLessons.map(lesson => (
              <LessonCard 
                key={lesson.id}
                lesson={lesson}
              />
            ))
          ) : (
            <div className='no-lessons'>
              <div className='no-lessons-content'>
                <span className='no-lessons-icon'>üìö</span>
                <h3 className='ql-title-large'>Ch∆∞a c√≥ kh√≥a h·ªçc cho danh m·ª•c n√†y</h3>
                <p className='ql-body-medium'>Ch√∫ng t√¥i ƒëang c·∫≠p nh·∫≠t th√™m kh√≥a h·ªçc. Vui l√≤ng quay l·∫°i sau!</p>
                <button className='ql-button' onClick={() => window.location.reload()}>
                  Xem kh√≥a h·ªçc ƒë·ªÅ xu·∫•t
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
      
      <ql-button href='catalog0d31.html?locale=vi&sort_by=marketing_featured' onClick={() => console.log('frontdoor_explore_catalog')}>
        Xem t·∫•t c·∫£ kh√≥a h·ªçc
      </ql-button>
    </section>
  );
};

export default LessonsSection;
